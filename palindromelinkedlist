class Solution {
    ListNode middle( ListNode head){
        ListNode slow =head;
        ListNode fast= head;
        while( fast.next!=null&&fast.next.next!=null){
            slow = slow .next;
            fast=fast.next.next;
        }
    return slow;}
    ListNode reverse( ListNode head){
        ListNode prev= null;
        ListNode index=null;
        ListNode curr =head;
        while( curr!=null){
            index=curr.next;
            curr.next= prev;
            prev= curr;
            curr = index;
        }
    return prev;}
public boolean isPalindrome(ListNode head) {
        if( head== null ){
            return true;
        }
         ListNode mid = middle(head);
         ListNode last= reverse(mid.next);
         ListNode curr1=head;
         while(last!=null){
            if(last.val!=curr1.val ){
                return false;
                }
            last=last.next;
            curr1=curr1.next;
         }
    return true;}
}
